<!DOCTYPE html>
<html>
  <head>
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a class="header-item" href="/index">Home</a></li>
        <li class="breadcrumb-item"><a class="header-item" href="/challenges">Challenges</a></li>
        <li class="breadcrumb-item"><a class="header-item" href="/mypage">History</a></li>
        <li class="breadcrumb-item"><a class="header-item" href="/help">Help</a></li>
        <li class="breadcrumb-item"><a class="header-item" href="/users/logout">Logout</a></li>
      </ol>
    </nav>
    <title>Answer</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="../css/index.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  </head>
  <body>
    <div class="page-div">
      <div class="card answer-card-difficulty">
        <div class="card-body" id="difficulty"></div>
      </div>
      <div class="card answer-card-time">
        <div class="card-body" id="remaining"></div>
      </div>
      <div class="card line">
        <div class="card-body"></div>
      </div>
      <div class="cards-wrapper"></div>
    </div>
  </body>
</html>

<script>
  var difficulty;
  var dateTimeStart;
  var maxQuestions;
  $(document).ready(function () {
    difficulty = location.href[location.href.length - 1];
    dateTimeStart = new Date();
    dateTimeStart = dateTimeStart.toISOString();
    let remaining;
    var answerQ;
    switch (difficulty) {
      case "1":
        difficulty = "easy";
        remaining = "60s";
        break;
      case "2":
        difficulty = "normal";
        remaining = "45s";
        break;
      case "3":
        difficulty = "advanced";
        remaining = "30s";
        break;
      case "4":
        difficulty = "extreme";
        remaining = "20s";
        break;
      default:
        break;
    }
    var contador = 1;
    $.ajax({
      type: "GET",
      url: `http://localhost:3000/challenges/try?difficulty=${difficulty}`,
    }).then((res) => {
      populateCards(res.questions);
      maxQuestions = res.maxQuestions;
    });
    $("#difficulty").text(difficulty);
    $("#remaining").text(remaining);
  });

  function checkLastQuestion(q) {
    let qNumber = Number(q[1]);
    if (qNumber === maxQuestions) {
      return true;
    }
    return false;
  }
 
  function saveAnswer(q) {
    $.ajax({
      type: "GET",
      url: `http://localhost:3000/users/get-user-by-token`,
    }).then((res) => {
      let dateTimeAnswer = new Date();
      dateTimeAnswer = dateTimeAnswer.toISOString();
      if ($(`#result-${q}`).val() !== null) {
        var answerRequest = {
          answerRequest: {
            userEmail: res,
            id: q,
            n1: $(`#${q}-1`).text(),
            n2: $(`#${q}-2`).text(),
            result: $(`#result-${q}`).val(),
            difficulty: difficulty,
            dateTimeStart: dateTimeStart,
            dateTimeAnswer: dateTimeAnswer,
            lastQuestion: checkLastQuestion(q),
            maxQuestions: maxQuestions,
          },
        };

        $.ajax({
          type: "POST",
          url: "http://localhost:3000/challenges/answer",
          data: answerRequest,
          dataType: "json",
          encode: true,
        }).then((res) => {
          if (res.completed) {
            window.location.href = "http://localhost:3000/mypage";
          }
        });
      }
    });
  }

  function getNumber(subString) {
    if (Number(subString[0]) >= 0 && Number(subString[1]) >= 0) {
      return subString;
    } else if (Number(subString[0]) >= 0) {
      return subString[0];
    } else {
      return subString[1];
    }
  }

  function populateCards(questionsList) {
    const cardList = document.querySelector(".cards-wrapper");
    const card = document.querySelector(".card");
    cardList.innerHTML = "";
    questionsList.forEach((card, i) => {
      const questionCard = `<div class="card answer-card">
        <div class="card-body">
          <div class="question">
            <h4 id="q${i+1}-1">${card.n1}</h4>
            <h4 id="q${i+1}-op">*</h4>
            <h4 id="q${i+1}-2">${card.n2}</h4>
          </div>
          
          <form id="form-q${i+1}">
            <div class="col-md-12">
              <input
                id="result-q${i+1}"
                class="form-control"
                type="number"
                name="result"
                placeholder="Answer"
                required
              />
              <div class="invalid-feedback">A resposta n√£o pode ser vazia.</div>
            </div>
            <div class="form-button mt-3">
              <button
                id="submit-${i+1}"
                type="button"
                onclick="saveAnswer('q${i+1}');"
                class="btn btn-dark"
              >
                Send
              </button>
            </div>
          </form>
        </div>
      </div>`;
      const element = document.createElement("div");
      element.innerHTML = questionCard;
      cardList.appendChild(element.firstChild);
    });
  } 

</script>
